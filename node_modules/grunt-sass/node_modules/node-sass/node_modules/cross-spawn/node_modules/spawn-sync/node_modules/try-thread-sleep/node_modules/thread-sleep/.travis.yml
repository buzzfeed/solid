language: cpp

os:
  - linux
  - osx

env:
  matrix:
    - NODE_VERSION="0.10"
    - NODE_VERSION="0.12"
    - NODE_VERSION="3"
    - NODE_VERSION="4"

# What we'll be using to compile
compiler:
  - gcc
  - clang

sudo: false

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8

install:
  # make sure gcc is up to date
  - |
    if [ "$TRAVIS_OS_NAME" = 'linux' ] && [ "$CXX" = 'g++' ]
    then
      export CXX='g++-4.8' CC='gcc-4.8'
    fi
  # insist we are using clang if we *are* using clang
  - |
    if [ "$CXX" = 'clang++' ]
    then
      CLANG_OPTS='--clang=1'
    fi
  # put local node-pre-gyp on PATH
  - export PATH=./node_modules/.bin/:$PATH
  # put global node-gyp on PATH
  - npm install node-gyp -g

before_script:
  # figure out if we should publish
  - PUBLISH_BINARY=
  # if we are building a tag then publish
  - |
    if [ "$TRAVIS_BRANCH" = "`git describe --tags --always HEAD`" ]
    then
      echo 'PUBLISH_BINARY=true'
      PUBLISH_BINARY=true
    fi
  # or if we put [publish binary] in the commit message
  - |
    if git show -s --format=%B "$TRAVIS_COMMIT" | grep -Fq '[publish binary]'
    then
      echo 'PUBLISH_BINARY=true'
      PUBLISH_BINARY=true
    fi
  # or if we put [publish binary linux] in the commit message
  - |
    if git show -s --format=%B "$TRAVIS_COMMIT" | grep -Fq '[publish binary linux]'
    then
      if [ "$TRAVIS_OS_NAME" = 'linux' ]
      then
        echo 'PUBLISH_BINARY=true'
        PUBLISH_BINARY=true
      fi
    fi
  # or if we put [publish binary osx] in the commit message
  - |
    if git show -s --format=%B "$TRAVIS_COMMIT" | grep -Fq '[publish binary osx]'
    then
      if [ "$TRAVIS_OS_NAME" = 'osx' ]
      then
        echo 'PUBLISH_BINARY=true'
        PUBLISH_BINARY=true
      fi
    fi
  # if we are compiling with clang on linux then don't publish
  - |
    if [ "$TRAVIS_OS_NAME" = 'linux' ] && [ "$CXX" = 'clang++' ]
    then
      echo 'PUBLISH_BINARY='
      PUBLISH_BINARY=
    fi
  # if we are compiling with gcc on mac then don't publish
  - |
    if [ "$TRAVIS_OS_NAME" = 'osx' ] && [ "$CXX" = 'g++' ]
    then
      echo 'PUBLISH_BINARY='
      PUBLISH_BINARY=
    fi

script:
  # ensure source install works
  - npm install --build-from-source $CLANG_OPTS
  # test our module
  - npm test
  # if publishing, do it
  - |
    if [ "$PUBLISH_BINARY" = 'true' ]
    then
      node-pre-gyp package publish
    fi
  # cleanup
  - node-pre-gyp clean
  - node-gyp clean
  # if publishing, test installing from remote
  - INSTALL_RESULT=0
  - |
    if [ "$PUBLISH_BINARY" = 'true' ]
    then
      INSTALL_RESULT=$(npm install --fallback-to-build=false > /dev/null)$? \
        || true;
    fi
  # if install returned non zero (errored) then we first unpublish and then
  # call false so travis will bail at this line
  - |
    if [ "$INSTALL_RESULT" -ne 0 ]
    then
      echo "returned $INSTALL_RESULT"
      node-pre-gyp unpublish
      false
    fi
  # If success then we arrive here so lets clean up
  - node-pre-gyp clean

after_success:
  # if success then query and display all published binaries
  - |
    if [ "$PUBLISH_BINARY" = 'true' ]
    then
      node-pre-gyp info
    fi
