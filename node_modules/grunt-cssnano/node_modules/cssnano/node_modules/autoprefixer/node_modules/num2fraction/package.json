{
  "name": "num2fraction",
  "version": "1.2.2",
  "description": "Convert number to fraction",
  "main": "index.js",
  "author": {
    "name": "yisi",
    "email": "yiorsi@gmail.com",
    "url": "http://iyunlu.com/view"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git@github.com:yisibl/num2fraction.git"
  },
  "keywords": [
    "fraction",
    "number",
    "math",
    "maths",
    "arithmetic",
    "gcd",
    "rational"
  ],
  "devDependencies": {
    "tape": "^3.0.0"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "readme": "# num2fraction\n\n[![Build Status](https://travis-ci.org/yisibl/num2fraction.svg)](https://travis-ci.org/yisibl/num2fraction) \n[![NPM Downloads](https://img.shields.io/npm/dm/num2fraction.svg?style=flat)](https://www.npmjs.com/package/num2fraction) \n[![NPM Version](http://img.shields.io/npm/v/num2fraction.svg?style=flat)](https://www.npmjs.com/package/num2fraction) \n[![License](https://img.shields.io/npm/l/num2fraction.svg?style=flat)](http://opensource.org/licenses/MIT) \n\n> Converting Number to Fraction with Node.js.\n\n## Installation\n\n```console\nnpm install num2fraction\n```\n\n## Usage\n\n```js\nvar π   = Math.PI\nvar n2f = require('num2fraction')\n  console.log(n2f(0))                // => 0\n  console.log(n2f(.2))               // => 1/5\n  console.log(n2f(1.1))              // => 11/10\n  console.log(n2f(1.2))              // => 6/5\n  console.log(n2f(1.3))              // => 13/10\n  console.log(n2f(1.4))              // => 7/5\n  console.log(n2f(1.5))              // => 3/2\n  console.log(n2f(2))                // => 2/1\n  console.log(n2f(2.1))              // => 21/10\n  console.log(n2f(3))                // => 3/1\n  console.log(n2f(2.555))            // => 511/200\n  console.log(n2f(8.36))             // => 209/25\n  console.log(n2f('3em'))            // => 3/1\n  console.log(n2f('1.5px'))          // => 3/2\n  console.log(n2f(7 / 9)             // => 7/9\n  console.log(n2f(8 / 9)             // => 8/9\n  console.log(n2f(512 / 999)         // => 512/999\n  console.log(n2f((2 * π / 3) / π)   // => 2/3\n  console.log(n2f((8 * 5) / (4 / 2)) // => 20/1\n```\n\n## Example\n\nOpera [old versions](http://www.opera.com/docs/specs/presto28/css/o-vendor/) support the non-standard `-o-min-device-pixel-ratio` or `-o-max-device-pixel-ratio` in CSS media queries.\n\n```css\n@media\n  only screen and (-webkit-min-device-pixel-ratio: 2),\n  only screen and (   min--moz-device-pixel-ratio: 2),\n  only screen and (     -o-min-device-pixel-ratio: 2/1), /* Opera */\n  only screen and (        min-device-pixel-ratio: 2),\n  only screen and (                min-resolution: 192dpi), /* fallback */\n  only screen and (                min-resolution: 2dppx) { \n\n}\n```\n\n## Changelog\n\n### v1.2.2\n\n* \\+ Remove: Debug log message.\n\n### v1.2.1\n\n* \\+ Fix: 0 must be converted to a string.\n\n### v1.2.0\n\n* \\+ Fix: Accomodate rounding errors. (by @jamestalmage)\n* \\+ Fix: The negative sign should be on numerator. (by @jamestalmage)\n\n### v1.1.0\n\n* \\+ Use more precise (not fixed) precision factor for the calculation\n\n### v1.0.1\n\n* \\- Remove \"ci.testling.com\"\n\n### V1.0.0\n\n> First release.\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/yisibl/num2fraction/issues"
  },
  "homepage": "https://github.com/yisibl/num2fraction",
  "_id": "num2fraction@1.2.2",
  "_shasum": "6f682b6a027a4e9ddfa4564cd2589d1d4e669ede",
  "_from": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",
  "_resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz"
}
