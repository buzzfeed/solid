{
  "name": "es6-promise",
  "namespace": "es6-promise",
  "version": "3.0.2",
  "description": "A lightweight library that provides tools for organizing asynchronous code",
  "main": "dist/es6-promise.js",
  "directories": {
    "lib": "lib"
  },
  "files": [
    "dist",
    "lib",
    "!dist/test"
  ],
  "devDependencies": {
    "bower": "^1.3.9",
    "brfs": "0.0.8",
    "broccoli-es3-safe-recast": "0.0.8",
    "broccoli-es6-module-transpiler": "^0.5.0",
    "broccoli-jshint": "^0.5.1",
    "broccoli-merge-trees": "^0.1.4",
    "broccoli-replace": "^0.2.0",
    "broccoli-stew": "0.0.6",
    "broccoli-uglify-js": "^0.1.3",
    "broccoli-watchify": "^0.2.0",
    "ember-cli": "0.2.3",
    "ember-publisher": "0.0.7",
    "git-repo-version": "0.0.2",
    "json3": "^3.3.2",
    "minimatch": "^2.0.1",
    "mocha": "^1.20.1",
    "promises-aplus-tests-phantom": "^2.1.0-revise",
    "release-it": "0.0.10"
  },
  "scripts": {
    "build": "ember build",
    "start": "ember s",
    "test": "ember test",
    "test:server": "ember test --server",
    "test:node": "ember build && mocha ./dist/test/browserify",
    "lint": "jshint lib",
    "prepublish": "ember build --environment production",
    "dry-run-release": "ember build --environment production && release-it --dry-run --non-interactive"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jakearchibald/ES6-Promises.git"
  },
  "bugs": {
    "url": "https://github.com/jakearchibald/ES6-Promises/issues"
  },
  "browser": {
    "vertx": false
  },
  "keywords": [
    "promises",
    "futures"
  ],
  "author": {
    "name": "Yehuda Katz, Tom Dale, Stefan Penner and contributors",
    "url": "Conversion to ES6 API by Jake Archibald"
  },
  "license": "MIT",
  "spm": {
    "main": "dist/es6-promise.js"
  },
  "readme": "# ES6-Promise (subset of [rsvp.js](https://github.com/tildeio/rsvp.js))\n\nThis is a polyfill of the [ES6 Promise](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-constructor). The implementation is a subset of [rsvp.js](https://github.com/tildeio/rsvp.js), if you're wanting extra features and more debugging options, check out the [full library](https://github.com/tildeio/rsvp.js).\n\nFor API details and how to use promises, see the <a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\">JavaScript Promises HTML5Rocks article</a>.\n\n## Downloads\n\n* [es6-promise](https://raw.githubusercontent.com/jakearchibald/es6-promise/master/dist/es6-promise.js)\n* [es6-promise-min](https://raw.githubusercontent.com/jakearchibald/es6-promise/master/dist/es6-promise.min.js)\n\n## Node.js\n\nTo install:\n\n```sh\nnpm install es6-promise\n```\n\nTo use:\n\n```js\nvar Promise = require('es6-promise').Promise;\n```\n\n## Usage in IE<9\n\n`catch` is a reserved word in IE<9, meaning `promise.catch(func)` throws a syntax error. To work around this, you can use a string to access the property as shown in the following example.\n\nHowever, please remember that such technique is already provided by most common minifiers, making the resulting code safe for old browsers and production:\n\n```js\npromise['catch'](function(err) {\n  // ...\n});\n```\n\nOr use `.then` instead:\n\n```js\npromise.then(undefined, function(err) {\n  // ...\n});\n```\n\n## Auto-polyfill\n\nTo polyfill the global environment (either in Node or in the browser via CommonJS) use the following code snippet:\n\n```js\nrequire('es6-promise').polyfill();\n```\n\nNotice that we don't assign the result of `polyfill()` to any variable. The `polyfill()` method will patch the global environment (in this case to the `Promise` name) when called.\n\n## Building & Testing\n\n* `npm run build` to build\n* `npm test` to run tests\n* `npm start` to run a build watcher, and webserver to test \n* `npm run test:server` for a testem test runner and watching builder\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/jakearchibald/ES6-Promises",
  "_id": "es6-promise@3.0.2",
  "_shasum": "010d5858423a5f118979665f46486a95c6ee2bb6",
  "_from": "https://registry.npmjs.org/es6-promise/-/es6-promise-3.0.2.tgz",
  "_resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-3.0.2.tgz"
}
