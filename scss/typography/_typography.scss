//
// Typography Base Styles
// --------------------------------------------------

$link-blue: $text-gray;
$link-gray: sdf;
$link-gray-lightest: sdfsd;

body,
h1,
h2,
h3,
h4,
h5,
h6,
.type-1,
.type-2,
.type-3,
.type-4,
.type-5,
.type-6 {
  line-height: $line-height;
}

h1 {
  font-size: $type-1;
}

h2 {
  font-size: $type-2;
}

h3 {
  font-size: $type-3;
}

h4 {
  font-size: $type-4;
}

h5 {
  font-size: $type-5;
}

h6,
.type-6 {
  font-size: $type-6;

  &.slab {
    font-family: "Proxima Nova";
  }
}

// wouldn't it make more sense to @extend .link-blue; here?
a {
  text-decoration: none;
  color: $text-blue;

  &:hover {
    color: darken($text-blue, 20%);
    transition: color .3s ease 0s;
  }
}

// Type Size Classes + Responsive Prefixes

@each $breakpoint-name, $breakpoint-value in $breakpoints {
  $breakpoint-prefix: breakpoint-prefix($breakpoint-name);

  @include media-query($breakpoint-name) {
    .#{$breakpoint-prefix}type-1 {
      font-size: $type-1;
    }

    .#{$breakpoint-prefix}type-2 {
      font-size: $type-2;
    }

    .#{$breakpoint-prefix}type-3 {
      font-size: $type-3;
    }

    .#{$breakpoint-prefix}type-4 {
      font-size: $type-4;
    }

    .#{$breakpoint-prefix}type-5 {
      font-size: $type-5;
    }

    .#{$breakpoint-prefix}type-6 {
      font-size: $type-6;
    }
  }
}

// Typography Emphasis and Styling

.regular,
.normal {
  font-weight: $regular;
}

strong,
b,
.bold {
  font-weight: $bold;
}

em,
i,
.italic {
  font-style: italic;
}

.caps {
  text-transform: uppercase;
}

// Text Alignment + Responsive Prefixes

@each $breakpoint-name, $breakpoint-value in $breakpoints {
  $breakpoint-prefix: breakpoint-prefix($breakpoint-name);

  @include media-query($breakpoint-name) {
    .#{$breakpoint-prefix}text-left {
      text-align: left;
    }

    .#{$breakpoint-prefix}text-center {
      text-align: center;
    }

    .#{$breakpoint-prefix}text-right {
      text-align: right;
    }

    .#{$breakpoint-prefix}text-justify {
      text-align: justify;
    }
  }
}

.nowrap {
  white-space: nowrap;
}

.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.decoration-none {
  text-decoration: none;
}

.decoration-underline {
  text-decoration: underline;
}

.decoration-line-through {
  text-decoration: line-through;
}

// Typeface Classes

.slab {
  font-family: "Caponi Slab";
  font-weight: 600;
  line-height:1.1;
  -moz-font-feature-settings: "liga", "kern";
  -moz-font-feature-settings:"liga=1, kern=1";
  -ms-font-feature-settings:"liga", "kern";
  -o-font-feature-settings:"liga", "kern";
  -webkit-font-feature-settings:"liga", "kern";
  font-feature-settings: "liga", "kern";
  &.bold {
    font-weight: 600;
  }

  &.italic {
    font-weight: 600;
  }
}

// Caponi should never be an h6 or .type-6

// scss-lint:disable QualifyingElement
.slab h6,
// scss-lint:enable QualifyingElement
h6.slab,
.type-6 .slab,
.slab.type-6 {
  font-family: "Proxima Nova";
  font-weight: 400;
}

// Ordered and unordered list, list items are block level

ol,
ul {
  padding-left: $space-4;
}

// Unstyled keeps list items block level, just removes default browser padding and list-style

.list-unstyled {
  margin-left: 0;
  padding-left: 0;
  list-style: none;
}

// Link Styles

.link-blue {
  color: $text-blue;

  &:hover {
    color: darken($text-blue, 20%);
  }
}

.link-gray {
  color: $text-gray;

  &:hover {
    color: $text-blue;
  }
}

.link-gray--lightest {
  color: $text-gray--lightest;

  &:hover {
    color: $text-gray;
  }
}

